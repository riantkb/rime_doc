コマンド
========

Rime の実行は次のように行います。
::

    ./rime.py COMMAND [OPTIONS] [ARGS]

コマンドを指定せずに実行するとヘルプメッセージが表示されます。また、 ``rime.py help COMMAND`` を実行するとコマンドに関するヘルプを見ることができます。

すべてのコマンドに共通のオプションは以下のようなものがあります。

.. cmdoption:: -j <n>, --jobs <n>

   タスク(例: 解答の実行, 出力検証器の実行など)の並列実行を有効にします。一般に、マルチコア環境ではこのオプションを指定することによりパフォーマンスが向上します。

   このオプションを指定した場合、デフォルトでは解答の実行時間の計測時間が行われなくなります。実行時間を計測したい場合は :option:`-p` オプションを使用して下さい。

.. cmdoption:: -p, --precise

   :option:`-j` オプションによりタスクの並列実行が有効になっている時、実行時間の計測を伴うタスクと他のタスクを並列に実行しないようにすることにより、実行時間の計測を有効にします。これにより並列実行のパフォーマンスが犠牲になります。

.. cmdoption:: -k, --keep_going

   ビルドやテストに失敗した際にも、影響のないタスクの実行を続行します。このオプションが指定されない場合、ひとつでもタスクが失敗するとすべてのタスクの実行が停止されます。

.. cmdoption:: -C, --cache_tests

   テスト結果をキャッシュすることにより、以前に実行したテストの実行を抑制します。


標準で使用出来るコマンドは以下の通りです。


.. describe:: rime.py help [COMMAND]

   ヘルプメッセージを表示します。コマンドを指定すると、そのコマンドに関するヘルプを見ることができます。

.. describe:: rime.py build [TARGET]

   ターゲットをビルドします。ターゲットはディレクトリ名で指定します。たとえばプロジェクトディレクトリを指定するとプロジェクト内の全てのファイルをビルドし、解答ディレクトリを指定すると解答のみをビルドします。ターゲット指定を省略するとカレントディレクトリとみなされます。

.. describe:: rime.py test [TARGET]

   ターゲットをテストします。ターゲットの指定は rime.py build と同様です。テストが何を行うかについては [テスト入出力の仕様](#testspec) を参照して下さい。

.. describe:: rime.py clean [TARGET]

   ターゲットの中間ファイルを削除します。ターゲットの指定は rime.py build と同様です。中間ファイルはすべて rime-out ディレクトリに保存されています。
