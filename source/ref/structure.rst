プロジェクトディレクトリの構成
==============================

Rime のプロジェクトディレクトリツリーは以下のような構成になります。

- プロジェクトディレクトリ
    - 問題ディレクトリ
        - 解答ディレクトリ
        - 解答ディレクトリ
        - ...
        - テストデータディレクトリ
    - 問題ディレクトリ
        - 解答ディレクトリ
        - 解答ディレクトリ
        - ...
        - テストデータディレクトリ
    - ...

問題ディレクトリと解答ディレクトリは必要なだけ用意します。
テストデータディレクトリは各問題あたり高々 1 つのみ作成できます。

具体的なプロジェクトディレクトリの構成例を以下に示します。
::

    project/
      rime.py             ... Rime 実行ファイル
      rime/               ... Rime ライブラリコード
        ...
      PROJECT             ... プロジェクト設定ファイル
      problem-a/          ... 問題ディレクトリ
        PROBLEM           ... 問題設定ファイル
        solution-a1/      ... 解答ディレクトリ
          SOLUTION        ... 解答設定ファイル
          main.cc         ... ソースコード
        solution-a2/      ... 解答ディレクトリ
          ...
        solution-a3/      ... 解答ディレクトリ
          ...
        tests/            ... テストデータディレクトリ
          TESTSET         ... テスト設定ファイル
          00_sample1.in   ... 入力ファイル
          00_sample2.in   ... 入力ファイル
          00_sample3.in   ... 入力ファイル
          generator.cc    ... 入力生成器
          validator.py    ... 入力検証器
          judge.cc        ... 出力検証器
      problem-b/         ... 問題ディレクトリ
        ...
      problem-c/         ... 問題ディレクトリ
        ...

問題ディレクトリ/解答ディレクトリには任意の名前が利用できます。テストディレクトリの名前も任意ですが、一般的には "tests" が用いられます。

テストデータディレクトリにある拡張子 .in のファイルは全て自動的に入力ファイルとして扱われます。また、ここには入力生成器・入力検証器・出力検証器を置くことができます。その場合、ファイル名を TESTSET ファイルに記述します。詳しくは :ref:`configs-TESTSET` を参照してください。
