.. _testspec:

テスト入出力の仕様
==================

テストの入出力ファイルはそれぞれ拡張子 .in, .diff を持ちます。

テストは次のように行われます。

1. すべての解答ディレクトリ、およびテストデータディレクトリ全体を rime-out ディレクトリ以下にコピーする。
2. 解答、入力生成器、入力検証器、出力検証器のコンパイルを行う。
3. すべての入力生成器を rime-out ディレクトリ内で実行する。これにより rime-out ディレクトリにすべてのテストケースに対応する .in ファイルが作成される。
4. 全ての入力データに対して入力検証器を実行する。ひとつでも検証エラーが発生した場合はストップする。
5. 基準解答を選択する。テストケースのうち .diff ファイルが存在しないものに対して基準解答を実行し、その出力を .diff ファイルとして保存する。
6. 基準解答以外の各解答を、各テストケースを入力として実行する。その出力は基準解答の出力と出力検証器を用いて比較される。出力検証器が指定されていない場合、単純にバイナリとして一致することの照合が diff コマンドによって行われる。

以下で入力生成器、入力検証器、出力検証器の仕様を説明します。

入力生成器
----------

入力ファイルを追加する方法には、固定入力ファイルを追加する方法と入力生成器を追加する方法があります。固定入力ファイルは主に小さなテストケースや手動で作成したテストケースに用い、テストデータディレクトリに .in の拡張子で配置します。大きなテストケースやランダム生成したテストケースを入力したい場合は入力生成器を用います。

入力生成器は実行されるとカレントディレクトリに入力ファイルを拡張子 .in で書き出すよう記述します。実行は rime-out ディレクトリ以下で行われます。

入力検証器
----------

入力検証器は、標準入力から入力データを受け取り、入力フォーマットが正しければ 0、そうでなければ 0 以外をリターンコードとして返します。

入力検証器はデバッグのための情報を標準出力に書き出すことができます。検証エラーの際にはその内容がコンソールに出力されます。

出力検証器
----------

出力検証器は、入力データ、基準解答の出力データ、そして解答の出力データを受け取り、解答が基準解答と一致することを検証します。一致すれば 0、そうでなければ 0 以外をリターンコードとして返します。

実行時には各データの所在を示すため、次のようなコマンドライン引数が指定されます:

- --infile <入力データファイル名>
- --difffile <基準解答出力データファイル名>
- --outfile <解答出力データファイル名>

出力検証器はデバッグのための情報を標準出力に書き出すことができます。検証エラーの際にはその内容がコンソールに出力されます。
